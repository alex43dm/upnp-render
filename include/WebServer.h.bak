#ifndef WEBSERVER_H
#define WEBSERVER_H

#include <string>
#include <map>

#include <upnp/upnp.h>

#include "Config.h"
#include "WebPage.h"

using namespace std;

class WebServer
{
public:

    WebServer(Config *);
    virtual ~WebServer();
    bool registerPage(std::string path, std::string contents,  std::string contentType);
    bool registerFile(std::string path,  std::string contentType);

    static int get_info(const char *filename, struct File_Info *info);
    static UpnpWebFileHandle open(const char *filename, enum UpnpOpenFileMode mode);
    static int read(UpnpWebFileHandle fh, char *buf, size_t buflen);
    static int write(UpnpWebFileHandle fh, char *buf, size_t buflen);
    static int seek(UpnpWebFileHandle fh, off_t offset, int origin);
    static int close(UpnpWebFileHandle fh);
    static UpnpVirtualDirCallbacks* callbacks(void);
    WebPage* getPage(const char *filename);

protected:
private:
    Config *cfg;
    bool registerFile(std::string path);
    void loadPages(const char *dirname);
    bool strReplace( string *, string, string );
};

#endif // WEBSERVER_H
